<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRender.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gMFwU/a/gO6a9rsq0sUAAAAASUVORK5CYII=
</value>
  </data>
</root>